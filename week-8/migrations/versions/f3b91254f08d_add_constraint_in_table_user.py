"""add constraint in table user

Revision ID: f3b91254f08d
Revises: 7488a7bde28e
Create Date: 2024-02-19 20:31:30.137889

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f3b91254f08d'
down_revision = '7488a7bde28e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=1024),
               nullable=False)
        batch_op.create_unique_constraint("unique_email", ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint("unique_email", type_='unique')
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=1024),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)

    # ### end Alembic commands ###
